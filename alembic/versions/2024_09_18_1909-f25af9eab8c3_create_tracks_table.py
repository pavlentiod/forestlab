"""Create tracks table

Revision ID: f25af9eab8c3
Revises: 48e669c5adf5
Create Date: 2024-09-18 19:09:39.770376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f25af9eab8c3'
down_revision: Union[str, None] = '48e669c5adf5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tracks',
    sa.Column('runner', sa.UUID(), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('elevation', sa.Float(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('points', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('event', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['event'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('events', 'splits',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'courses',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'results',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'groups',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'runners',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'legs',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('events', 'legs',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'runners',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'groups',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'results',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'courses',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.alter_column('events', 'splits',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::json"))
    op.drop_table('tracks')
    # ### end Alembic commands ###
